/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

&mt {
    flavor = "tap-preferred";
    require-prior-idle_ms= <125>;
    tapping-term-ms = <200>;
    quick_tap_ms = <200>;
};

&lt {  
    flavor = "tap-preferred";
    require-prior-idle_ms= <125>;
    tapping-term-ms = <200>;
    quick_tap_ms = <200>;
};

#define DVO 1
#define SYM 2
#define FNDL 3
#define KEYB 4

/ {
    behaviors {
        magic: magic_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "MAGIC_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&rgb_ug_status_macro>;
        };
    };

    macros {
        rgb_ug_status_macro: rgb_ug_status_macro_0 {
            label = "RGB_UG_STATUS";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&rgb_ug RGB_STATUS>;
        };

        bt_0: bt_profile_macro_0 {
            label = "BT_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 0>;
        };

        bt_1: bt_profile_macro_1 {
            label = "BT_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 1>;
        };

        bt_2: bt_profile_macro_2 {
            label = "BT_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 2>;
        };

        bt_3: bt_profile_macro_3 {
            label = "BT_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
                = <&out OUT_BLE>,
                  <&bt BT_SEL 3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        /*0*/
        qwerty {
            bindings = <
                    &kp F1      &kp F2        &kp F3      &kp F4       &kp F5                                                                                                          &kp F6      &kp F7      &kp F8         &kp F9    &kp F10
                 &kp EQUAL      &kp N1        &kp N2      &kp N3       &kp N4  &kp N5                                                                                      &kp N6      &kp N7      &kp N8      &kp N9         &kp N0  &kp MINUS
                   &kp TAB       &kp Q         &kp W       &kp E        &kp R   &kp T                                                                                       &kp Y       &kp U       &kp I       &kp O          &kp P   &kp BSLH
                   &kp ESC  &mt LGUI A    &mt LALT S &mt LCTRL D &mt LSHIFT F   &kp G                                                                                       &kp H &mt RSHFT J &mt RCTRL K  &mt RALT L  &mt RGUI SEMI    &kp SQT
                 &kp LSHFT       &kp Z         &kp X       &kp C        &kp V   &kp B      &kp LCTRL    &tog DVO     &kp PG_UP  &kp    PG_DN &magic KEYB 0        &kp LGUI  &kp N       &kp M   &kp COMMA     &kp DOT       &kp FSLH  &kp RSHFT
                  &mo FNDL     &kp F11       &kp F12    &kp LEFT    &kp RIGHT         &mt LSHFT BSPC &lt SYM DEL &mt LALT HOME  &mt RALT END   &lt SYM RET &mt RSHFT SPACE             &kp UP    &kp DOWN    &kp LBKT       &kp RBKT   &mo FNDL 
            >;
        };
        /*1*/
        dvorak {
            bindings = <
                    &kp F1      &kp F2        &kp F3      &kp F4       &kp F5                                                                                                            &kp F6      &kp F7      &kp F8     &kp F9    &kp F10
                 &kp EQUAL      &kp N1        &kp N2      &kp N3       &kp N4  &kp N5                                                                                        &kp N6      &kp N7      &kp N8      &kp N9     &kp N0  &kp MINUS
                   &kp TAB     &kp SQT     &kp COMMA     &kp DOT        &kp P   &kp Y                                                                                         &kp F       &kp G       &kp C       &kp R      &kp P   &kp BSLH
                   &kp ESC  &mt LGUI A    &mt LALT O &mt LCTRL E &mt LSHIFT U   &kp I                                                                                         &kp D &mt RSHFT H &mt RCTRL T  &mt RALT N &mt RGUI S    &kp FSL
                 &kp LSHFT    &kp SEMI         &kp Q       &kp J        &kp K   &kp X      &kp LCTRL      &trans       &kp PG_UP     &kp PG_DN &magic KEYB 0        &kp LGUI  &kp B       &kp M       &kp W       &kp V      &kp Z  &kp RSHFT
                  &mo FNDL     &kp F11       &kp F12    &kp LEFT    &kp RIGHT         &mt LSHFT BSPC &lt SYM DEL &mt LALT 5 HOME  &mt RALT END   &lt SYM RET &mt RSHFT SPACE             &kp UP    &kp DOWN    &kp LBKT   &kp RBKT   &mo FNDL 
            >;
        };
        /*2*/
        symbols {
            bindings = <
                &none          &none         &none          &none        &none                                                                                &none          &none         &none          &none &none
                &none &kp LS(RA(N1))    &kp RA(N2)     &kp RA(N3) &kp RA(LBKT) &kp RA(RBKT)                                                &kp RS(RA(C)) &kp RA(N5)  &kp RS(RA(V))    &kp RA(N9)     &kp RA(N0) &none
                &none         &kp AT     &kp GRAVE       &kp LBKT     &kp RBKT    &kp CARET                                                     &kp EXCL     &kp LT         &kp GT     &kp EQUAL       &kp AMPS &none
                &none  &mt LGUI BSLH &mt LALT FSLH &mt LCTRL LBRC     &kp RBRC    &kp UNDER                                                    &kp QMARK   &kp LPAR &mt RCTRL RPAR &mt RALT SEMI &mt RGUI COLON &none
                &none       &kp HASH      &kp DLLR       &kp PIPE    &kp TILDE     &kp STAR &none   &none  &none  &none   &none &none           &kp PLUS  &kp PRCNT        &kp DQT      &kp APOS      &kp MINUS &none
                &none          &none         &none          &none        &none              &none  &trans  &none  &none  &trans &none                         &none          &none         &none          &none &none
            >;
        };
        /*3*/
        fn {
            bindings = <
                      &none        &none        &none        &none         &none                                                              &none        &none       &none       &none &none
                      &none        &none        &none        &none         &none  &none                                          &none        &none        &none       &none       &none &none
                      &none       &kp F1       &kp F2       &kp F3        &kp F4 &kp F5                                         &kp F6       &kp F7       &kp F8      &kp F9     &kp F10 &none
                      &none  &mt LGUI N1  &mt LALT N2  &mt LCTR N3  &mt LSHFT N4 &kp N5                                         &kp N6 &mt RSHFT N7 &mt RCTRL N8 &mt RALT N9 &mt RGUI N0 &none
                      &none      &kp F11      &kp F12        &none         &none  &none  &none  &none &none &none &none   &none  &none        &none     &none          &none       &none &none
                      &none        &none        &none        &none         &none        &LSHFT &LCTRL &LALT &RALT &RCTRL &RSHFT                &none     &none          &none       &none &none
            >;
        };
        /*4*/
        magic_layer {
            bindings = <
                 &bt BT_CLR            &none            &none            &none            &none                                                                    &none  &none  &none  &none  &bt BT_CLR_ALL
               &out OUT_USB            &bt_0            &bt_1            &bt_2            &bt_3            &none                                            &none  &none  &none  &none  &none    &out OUT_USB
                     &trans  &rgb_ug RGB_SPI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_BRI  &rgb_ug RGB_TOG                                            &none  &none  &none  &none  &none           &none
                &bootloader  &rgb_ug RGB_SPD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_BRD  &rgb_ug RGB_EFF                                            &none  &none  &none  &none  &none     &bootloader
                 &sys_reset            &none            &none            &none            &none            &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none  &none      &sys_reset
                      &none            &none            &none            &none            &none                   &none  &none  &none  &none  &none  &none         &none  &none  &none  &none           &none
            >;
        };
        factory_test_layer {
            bindings = <
            &kp N0   &kp N6   &kp N2   &kp N8   &kp N4                                                                              &kp N4   &kp N8   &kp N2   &kp N6   &kp N0
            &kp N1   &kp N7   &kp N3   &kp N9   &kp N5   &kp N0                                                            &kp N0   &kp N5   &kp N9   &kp N3   &kp N7   &kp N1
            &kp N2   &kp N8   &kp N4   &kp N0   &kp N6   &kp N1                                                            &kp N1   &kp N6   &kp N0   &kp N4   &kp N8   &kp N2
            &kp N3   &kp N9   &kp N5   &kp N1   &kp N7   &kp N2                                                            &kp N2   &kp N7   &kp N1   &kp N5   &kp N9   &kp N3
            &kp N4   &kp N0   &kp N6   &kp N2   &kp N8   &kp N3   &kp N4   &kp N5   &kp N6      &kp N6   &kp N5   &kp N4   &kp N3   &kp N8   &kp N2   &kp N6   &kp N0   &kp N4
            &kp N5   &kp N1   &kp N7   &kp N3   &kp N9            &kp N7   &kp N8   &kp N9      &kp N9   &kp N8   &kp N7            &kp N9   &kp N3   &kp N7   &kp N1   &kp N5
            >;
        };
    };
};
